<%= form_with model: @job, url: activejob_web_jobs_path, local: true, class: 'p-4 bg-light rounded shadow-sm', id: 'jobForm' do |f| %>
  <div class="card-body p-3">
    <% if @job.errors.any? %>
      <div class="alert alert-danger" role="alert">
        <ul>
          <% @job.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  </div>

  <div class="mb-3">
    <%= f.label :title, 'Job Title', class: 'form-label fw-bold' %>
    <%= f.text_field :title, required: true, class: 'form-control', style: 'width: 900px;'%>
  </div>

  <div class="mb-3">
    <%= f.label :description, 'Description', class: 'form-label fw-bold' %>
    <%= f.text_area :description, required: true, class: 'form-control', rows: 2, style: 'width: 900px;' %>
  </div>

  <div class="mb-3">
    <%= f.label :job_name, 'Job Name', class: 'form-label fw-bold' %>
    <%= f.select :job_name, options_for_select(@activejob_web_job_names),{},{ required: true, class: 'form-select', style: 'width: 900px;' }%>
  </div>

  <div class="mb-3">
    <%= f.label :max_run_time, 'Max Run Time (seconds)', class: 'form-label fw-bold' %>
    <%= f.number_field :max_run_time, required: true, value: 3000, class: 'form-control', style: 'width: 900px;' %>
  </div>

  <div class="mb-3">
    <%= f.label :minimum_approvals_required, 'Minimum Approvals Required', class: 'form-label fw-bold' %>
    <%= f.number_field :minimum_approvals_required, value: 1, class: 'form-control', style: 'width: 900px;' %>
  </div>

  <div class="mb-3">
    <%= f.label :priority, 'Priority', class: 'form-label fw-bold' %>
    <%= f.number_field :priority, value: 1, class: 'form-control', style: 'width: 900px;' %>
  </div>

  <div class="mb-3">
    <%= f.label :input_arguments, 'Input Arguments (JSON)', class: 'form-label fw-bold' %>
    <%= f.text_area :input_arguments, placeholder: '[{"name":"arg1","type":"String","required":true}]', required: true, class: 'form-control', style: 'width: 900px;', rows: 4 %>
  </div>

  <div class="mb-3 row">
    <div class="col-sm-2">
      <strong class="text-dark">Search Approver:</strong>
    </div>
    <div class="col-sm-10 d-flex align-items-center">
      <input type="text" id="approver-search" class="form-control me-2" placeholder="Enter approver email" , style="width: 595px;"/>
      <button type="button" id="search-approver" class="btn btn-sm btn-primary">Search</button>
    </div>
  </div>

  <div class="mb-3 row">
    <div class="col-sm-2"><strong class="text-dark">Approvers:</strong></div>
    <div class="col-sm-5">
      <select id="approver-select" class="form-select" name="activejob_web_job[approver_ids][]" multiple size="10" style="height: 150px; width:670px; overflow-y: auto;">
        <% @all_approvers.each do |approver| %>
          <option value="<%= approver.id %>"><%= approver.email %></option>
        <% end %>
      </select>
    </div>
  </div>

  <div class="mb-3 row">
    <div class="col-sm-2">
      <strong class="text-dark">Search Executor:</strong>
    </div>
    <div class="col-sm-10 d-flex align-items-center">
      <input type="text" id="executor-search" class="form-control me-2" placeholder="Enter Executor email" , style="width: 595px;"/>
      <button type="button" id="search-approver" class="btn btn-sm btn-primary">Search</button>
    </div>
  </div>

  <div class="mb-3 row">
    <div class="col-sm-2"><strong class="text-dark">Executors:</strong></div>
    <div class="col-sm-5">
      <select id="executor-select" class="form-select" name="activejob_web_job[executor_ids][]" multiple size="10" style="height: 150px; width:670px; overflow-y: auto;">
        <% @all_executors.each do |executor| %>
          <option value="<%= executor.id %>"><%= executor.email %></option>
        <% end %>
      </select>
    </div>
  </div>

  <div class="d-flex justify-content-end">
    <%= f.submit 'Create Job', class: 'btn btn-primary' %>
  </div>
<% end %>
<script>
    function isJsonString(str) {
        try {
            JSON.parse(str);
        } catch (e) {
            return false;
        }
        return true;
    }

    document.getElementById('jobForm').addEventListener('submit', function (event) {
        const inputArgumentsField = document.getElementById('activejob_web_job_input_arguments');

        if (!isJsonString(inputArgumentsField.value.trim())) {
            event.preventDefault();
            inputArgumentsField.classList.add('is-invalid');
        } else {
            inputArgumentsField.classList.remove('is-invalid');
        }
    });

    $(document).ready(function () {
        var approverSelect = $("#approver-select");
        var executorSelect = $("#executor-select");

        // Variables for infinite scroll
        var currentApproverPage = 1;
        var currentExecutorPage = 1;
        var loadingApprovers = false;
        var loadingExecutors = false;

        // Search event listeners
        $("#search-approver").on("click", function () {
            var email = $("#approver-search").val().trim();
            if (email) {
                searchAndLoadUsers('approver', email);
            }
        });

        $("#search-executor").on("click", function () {
            var email = $("#executor-search").val().trim();
            if (email) {
                searchAndLoadUsers('executor', email);
            }
        });

        // Infinite scroll event for approvers
        approverSelect.on('scroll', function () {
            if (!loadingApprovers && approverSelect[0].scrollTop + approverSelect.outerHeight() >= approverSelect[0].scrollHeight) {
                loadingApprovers = true;
                currentApproverPage++;
                loadOptions('approver', currentApproverPage, $("#approver-search").val().trim());
            }
        });

        // Infinite scroll event for executors
        executorSelect.on('scroll', function () {
            if (!loadingExecutors && executorSelect[0].scrollTop + executorSelect.outerHeight() >= executorSelect[0].scrollHeight) {
                loadingExecutors = true;
                currentExecutorPage++;
                loadOptions('executor', currentExecutorPage, $("#executor-search").val().trim());
            }
        });

        // Load options function (for infinite scroll)
        function loadOptions(type, page, email) {
            $.ajax({
                url: `<%= load_more_users_activejob_web_jobs_path %>`,
                method: 'GET',
                dataType: 'json',
                data: {type: type, page: page, email: email},
                success: function (data) {
                    if (type === 'approver' && data.approvers) {
                        data.approvers.forEach(function (approver) {
                            approverSelect.append(new Option(approver.email, approver.id));
                        });
                        loadingApprovers = false;
                    } else if (type === 'executor' && data.executors) {
                        data.executors.forEach(function (executor) {
                            executorSelect.append(new Option(executor.email, executor.id));
                        });
                        loadingExecutors = false;
                    }
                },
                error: function () {
                    loadingApprovers = false;
                    loadingExecutors = false;
                }
            });
        }

        // Function to handle search and reset pagination
        function searchAndLoadUsers(type, email) {
            var selectElement = type === 'approver' ? approverSelect : executorSelect;
            selectElement.empty(); // Clear previous results
            if (type === 'approver') {
                currentApproverPage = 1;
                loadingApprovers = true;
            } else {
                currentExecutorPage = 1;
                loadingExecutors = true;
            }
            loadOptions(type, 1, email); // Start loading from the first page with search term
        }
    });
</script>
